name: "Format, Build & Test"

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  checks: write

jobs:
  format:
    name: "Code Format Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dotnet-setup
      - name: "Code format check"
        run: dotnet format --verify-no-changes

  test:
    needs: format
    name: "Run Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dotnet-setup

  SonarCube:
    needs: test
    name: Build and analyze SonarCube
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ${{ runner.temp }}\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ${{ runner.temp }}\scanner

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          cd MyApi
          $env:PATH = "${{ runner.temp }}\scanner;" + $env:PATH
          dotnet-sonarscanner begin /k:"devVvincent_2_Api_CD" /o:"devvvincent" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          dotnet build
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

